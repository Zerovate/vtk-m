################################################################################
# Job templates
################################################################################

build:ascent_gcc_cuda:
  tags: [nobatch]
  extends:
    - .ascent_gcc_cuda
    - .ascent_build
    - .run_ecp_ci
    - .cmake_build_artifacts

test:ascent_gcc_cuda:
  tags: [batch]
  extends:
    - .ascent_gcc_cuda
    - .ascent_test
    - .run_ecp_ci
    - .cmake_test_artifacts

.ascent_gcc_cuda:
  variables:
    CCACHE_BASEDIR: /gpfs/wolf/
    CCACHE_DIR: /gpfs/wolf/proj-shared/csc331/vtk-m/ci/ccache/
    CCACHE_IGNOREOPTIONS: "-isystem=*"
    CCACHE_LOG_FILE: /gpfs/wolf/proj-shared/csc331/vtk-m/ci/ccache/.ccache.log
    CCACHE_NOHASHDIR: "true"

    CMAKE_BUILD_TYPE: RelWithDebInfo
    CMAKE_GENERATOR: Unix Makefiles
    CUSTOM_CI_BUILDS_DIR: /gpfs/wolf/proj-shared/csc331/vtk-m/ci/runtime
    EXTERNAL_WORKDIR: /gpfs/wolf/proj-shared/csc331/vtk-m/ci/${CI_PIPELINE_ID}_${BUILD_NAME}
    FF_ENABLE_JOB_CLEANUP: "true"
    GITLAB_SITE: OLCF GitLab

    BUILD_NAME: ascent_gcc_cuda
    CC: gcc
    CXX: g++
    CUDAHOSTCXX: g++
    JOB_MODULES: gcc/8.1.1 spectrum-mpi lsf-tools cuda/11.2.0
    VTKM_SETTINGS: cuda+ascent+ccache
    CTEST_MAX_PARALLELISM: 4

.ascent_build:
  stage: build
  before_script:
    # Prep the environment
    - module purge
    - echo ${JOB_MODULES}
    - module load git git-lfs cmake zstd ${JOB_MODULES}
    - export PATH="/ccsopen/home/vbolea/bin:$PATH"
    - ccache -p
    - ccache -z

    # Use a work directory on the shared filesystem accessible to compute nodes
    # instead of the work directory gitlab-ci sets up
    - git remote add lfs https://gitlab.kitware.com/vtk/vtk-m.git
    - git fetch lfs
    - git-lfs install
    - git-lfs pull lfs

    # Start running the builds scripts
    - cmake --version
    - "cmake -V -P .gitlab/ci/config/gitlab_ci_setup.cmake"
    - "ctest -VV -S .gitlab/ci/ctest_configure.cmake"

  script:
    - "ctest -VV -S .gitlab/ci/ctest_build.cmake"
    - ccache -s

.ascent_test:
  stage: test
  variables:
    GITLAB_CI_EMULATION: "true"
    SCHEDULER_PARAMETERS: -P CSC331 -W 1:00 -nnodes 1 -alloc_flags gpudefault
    CTEST_MAX_PARALLELISM: 8
  before_script:
    # Prep the environment
    - module purge
    - module load git cmake ${JOB_MODULES}

  script:
    - "jsrun -n1 -r1 -a1 -g1 -c7 ctest -VV -S .gitlab/ci/ctest_test.cmake || test_output=$?"
    - ctest -VV -S .gitlab/ci/ctest_test_submit.cmake
    - $(exit $test_output)
